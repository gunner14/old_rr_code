// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tripodlike.proto

#ifndef PROTOBUF_tripodlike_2eproto__INCLUDED
#define PROTOBUF_tripodlike_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace xce {
namespace tripodlike {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tripodlike_2eproto();
void protobuf_AssignDesc_tripodlike_2eproto();
void protobuf_ShutdownFile_tripodlike_2eproto();

class TripodLikeShip;

// ===================================================================

class TripodLikeShip : public ::google::protobuf::Message {
 public:
  TripodLikeShip();
  virtual ~TripodLikeShip();
  
  TripodLikeShip(const TripodLikeShip& from);
  
  inline TripodLikeShip& operator=(const TripodLikeShip& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TripodLikeShip& default_instance();
  
  void Swap(TripodLikeShip* other);
  
  // implements Message ----------------------------------------------
  
  TripodLikeShip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TripodLikeShip& from);
  void MergeFrom(const TripodLikeShip& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 userIds = 1;
  inline int userids_size() const;
  inline void clear_userids();
  static const int kUserIdsFieldNumber = 1;
  inline ::google::protobuf::int32 userids(int index) const;
  inline void set_userids(int index, ::google::protobuf::int32 value);
  inline void add_userids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      userids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_userids();
  
  // @@protoc_insertion_point(class_scope:xce.tripodlike.TripodLikeShip)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > userids_;
  friend void  protobuf_AddDesc_tripodlike_2eproto();
  friend void protobuf_AssignDesc_tripodlike_2eproto();
  friend void protobuf_ShutdownFile_tripodlike_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TripodLikeShip* default_instance_;
};
// ===================================================================


// ===================================================================

// TripodLikeShip

// repeated int32 userIds = 1;
inline int TripodLikeShip::userids_size() const {
  return userids_.size();
}
inline void TripodLikeShip::clear_userids() {
  userids_.Clear();
}
inline ::google::protobuf::int32 TripodLikeShip::userids(int index) const {
  return userids_.Get(index);
}
inline void TripodLikeShip::set_userids(int index, ::google::protobuf::int32 value) {
  userids_.Set(index, value);
}
inline void TripodLikeShip::add_userids(::google::protobuf::int32 value) {
  userids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TripodLikeShip::userids() const {
  return userids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TripodLikeShip::mutable_userids() {
  return &userids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tripodlike
}  // namespace xce

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tripodlike_2eproto__INCLUDED
