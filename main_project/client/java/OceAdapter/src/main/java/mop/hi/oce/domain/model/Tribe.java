package mop.hi.oce.domain.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import xce.util.tools.DateFormatter;


/**
 * The skeleton for this class was autogenerated by Torque on:
 * 
 * [Tue Dec 20 03:14:00 CST 2005]
 * 
 * You should add additional methods to this class to meet the application
 * requirements. This class will only be generated as long as it does not
 * already exist in the output directory.
 */
public class Tribe implements Serializable {
	public static String ID = "ID";;

	public static String NAME = "NAME";;

	public static String DESCRIPTION = "DESCRIPTION";;

	public static String USERCOUNT = "USERCOUNT";;

	public static String FOUNDTIME = "FOUNDTIME";;

	public static String JOINLVL = "JOINLVL";;

	public static String ACCESS = "ACCESS";;

	public static String SELECTED = "SELECTED";;

	public static String POST_COUNT = "POST_COUNT";;

	public static String DEL_POST_COUNT = "DEL_POST_COUNT";;

	public static String THREAD_COUNT = "THREAD_COUNT";;

	public static String DEL_THREAD_COUNT = "DEL_THREAD_COUNT";;

	public static String LAST_POST_TIME = "LAST_POST_TIME";;

	public static String LABEL_COUNT = "LABEL_COUNT";;

	public static String MAIN_URL = "MAIN_URL";;

	public static String HEAD_URL = "HEAD_URL";;

	public static String TINY_URL = "TINY_URL";;

	public static String VERIFY_CODE = "VERIFY_CODE";;

	public static String TRIBE_TYPE = "TRIBE_TYPE";;

	public static String LARGE_URL = "LARGE_URL";;

	public static String REQUESTCOUNT = "REQUESTCOUNT";;

	public static String REQUESTADMINCOUNT = "REQUESTADMINCOUNT";;

	public static String UPDISP = "UPDISP";

	public int id;

	public String name;

	public String description;

	public int usercount;

	public Date foundtime;

	public int joinlvl;

	public int access;

	public int selected;

	public int post_count;

	public int del_post_count;

	public int thread_count;

	public int del_thread_count;

	public Date last_post_time;

	public int label_count;

	public String main_url;

	public String head_url;

	public String tiny_url;

	public String verify_code;

	public int tribe_type;

	public String large_url;

	public int requestcount;

	public int requestadmincount;

	public Date updisp;

	private Map<String, String> updatedProperties;

	public Map<String, String> getUpdatedProperties() {
		if (updatedProperties == null) {
			updatedProperties = new HashMap<String, String>();
		}
		return updatedProperties;
	}

	public static Tribe parse(Map<String, String> properties) {
		Tribe result = new Tribe();

		result.setId(Integer.parseInt(properties.get(Tribe.ID)));
		result.setName(properties.get(Tribe.NAME));
		result.setDescription((properties.get(Tribe.DESCRIPTION)));
		result.setUsercount(Integer.parseInt(properties.get(Tribe.USERCOUNT)));
		result.setFoundtime(DateFormatter
				.parse(properties.get(Tribe.FOUNDTIME)));
		result.setJoinlvl(Integer.parseInt(properties.get(Tribe.JOINLVL)));
		result.setAccess(Integer.parseInt(properties.get(Tribe.ACCESS)));
		result.setSelected(Integer.parseInt(properties.get(Tribe.SELECTED)));
		result
				.setPost_count(Integer.parseInt(properties
						.get(Tribe.POST_COUNT)));
		result.setDel_post_count(Integer.parseInt(properties
				.get(Tribe.DEL_POST_COUNT)));
		result.setThread_count(Integer.parseInt(properties
				.get(Tribe.THREAD_COUNT)));
		result.setDel_thread_count(Integer.parseInt(properties
				.get(Tribe.DEL_THREAD_COUNT)));
		result.setLast_post_time(DateFormatter.parse(properties
				.get(Tribe.LAST_POST_TIME)));
		result.setLabel_count(Integer.parseInt(properties
				.get(Tribe.LABEL_COUNT)));
		result.setMain_url(properties.get(Tribe.MAIN_URL));
		result.setHead_url((properties.get(Tribe.HEAD_URL)));
		result.setTiny_url((properties.get(Tribe.TINY_URL)));
		result.setVerify_code((properties.get(Tribe.VERIFY_CODE)));
		result
				.setTribe_type(Integer.parseInt(properties
						.get(Tribe.TRIBE_TYPE)));
		result.setLarge_url((properties.get(Tribe.LARGE_URL)));
		result.setRequestcount(Integer.parseInt(properties
				.get(Tribe.REQUESTCOUNT)));
		result.setRequestadmincount(Integer.parseInt(properties
				.get(Tribe.REQUESTADMINCOUNT)));
		result.setUpdisp(DateFormatter.parse(properties.get(Tribe.UPDISP)));
		result.getUpdatedProperties().clear();
		return result;
	}

	public Map<String, String> getProperties() {
		Map<String, String> props = new HashMap<String, String>();
		props.put(ID, String.valueOf(id));

		props.put(NAME, name);

		props.put(DESCRIPTION, description);

		props.put(USERCOUNT, String.valueOf(usercount));

		props.put(FOUNDTIME, DateFormatter.format(foundtime));

		props.put(JOINLVL, String.valueOf(joinlvl));

		props.put(ACCESS, String.valueOf(access));

		props.put(SELECTED, String.valueOf(selected));

		props.put(POST_COUNT, String.valueOf(post_count));

		props.put(DEL_POST_COUNT, String.valueOf(del_post_count));

		props.put(THREAD_COUNT, String.valueOf(thread_count));

		props.put(DEL_THREAD_COUNT, String.valueOf(del_thread_count));

		props.put(LAST_POST_TIME, DateFormatter.format(last_post_time));

		props.put(LABEL_COUNT, String.valueOf(label_count));

		props.put(MAIN_URL, main_url);

		props.put(HEAD_URL, head_url);

		props.put(TINY_URL, tiny_url);

		props.put(VERIFY_CODE, verify_code);

		props.put(TRIBE_TYPE, String.valueOf(tribe_type));

		props.put(LARGE_URL, large_url);

		props.put(REQUESTCOUNT, String.valueOf(requestcount));

		props.put(REQUESTADMINCOUNT, String.valueOf(requestadmincount));

		props.put(UPDISP, DateFormatter.format(updisp));
		return props;
	}

	public String toString() {
		StringBuffer str = new StringBuffer();
		str.append("Tribe:\n");
		str.append("id = ").append(getId()).append("\n");
		str.append("name = ").append(getName()).append("\n");
		str.append("description = ").append(getDescription()).append("\n");
		str.append("usercount = ").append(getUsercount()).append("\n");
		str.append("foundtime = ").append(getFoundtime()).append("\n");
		str.append("joinlvl = ").append(getJoinlvl()).append("\n");
		str.append("access = ").append(getAccess()).append("\n");
		str.append("selected = ").append(getSelected()).append("\n");
		str.append("post_count = ").append(getPost_count()).append("\n");
		str.append("del_post_count = ").append(getDel_post_count())
				.append("\n");
		str.append("last_post_time = ").append(getLast_post_time())
				.append("\n");
		str.append("label_count = ").append(getLabel_count()).append("\n");
		str.append("main_url = ").append(getMain_url()).append("\n");
		str.append("head_url = ").append(getHead_url()).append("\n");
		str.append("tiny_url = ").append(getTiny_url()).append("\n");
		str.append("verify_code = ").append(getVerify_code()).append("\n");
		str.append("tribe_type = ").append(getTribe_type()).append("\n");
		str.append("large_url = ").append(getLarge_url()).append("\n");
		str.append("requestcount = ").append(getRequestcount()).append("\n");
		str.append("requestadmincount = ").append(getRequestadmincount())
				.append("\n");
		str.append("updisp = ").append(getUpdisp()).append("\n");

		return str.toString();
	}

	public int getAccess() {
		return access;
	}

	public void setAccess(int access) {
		this.access = access;
		getUpdatedProperties().put(Tribe.ACCESS, String.valueOf(access));
	}

	public int getDel_post_count() {
		return del_post_count;
	}

	public void setDel_post_count(int del_post_count) {
		this.del_post_count = del_post_count;
		getUpdatedProperties().put(Tribe.DEL_POST_COUNT,
				String.valueOf(del_post_count));
	}

	public int getDel_thread_count() {
		return del_thread_count;
	}

	public void setDel_thread_count(int del_thread_count) {
		this.del_thread_count = del_thread_count;
		getUpdatedProperties().put(Tribe.DEL_THREAD_COUNT,
				String.valueOf(del_thread_count));
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
		getUpdatedProperties().put(Tribe.DESCRIPTION, description);
	}

	public Date getFoundtime() {
		return foundtime;
	}

	public void setFoundtime(Date foundtime) {
		this.foundtime = foundtime;
		getUpdatedProperties().put(Tribe.FOUNDTIME,
				DateFormatter.format(foundtime));
	}

	public String getHead_url() {
		return head_url;
	}

	public void setHead_url(String head_url) {
		this.head_url = head_url;
		getUpdatedProperties().put(Tribe.HEAD_URL, head_url);
	}

	public int getJoinlvl() {
		return joinlvl;
	}

	public void setJoinlvl(int joinlvl) {
		this.joinlvl = joinlvl;
		getUpdatedProperties().put(Tribe.JOINLVL, String.valueOf(joinlvl));
	}

	public int getLabel_count() {
		return label_count;
	}

	public void setLabel_count(int label_count) {
		this.label_count = label_count;
		getUpdatedProperties().put(Tribe.LABEL_COUNT,
				String.valueOf(label_count));
	}

	public String getLarge_url() {
		return large_url;
	}

	public void setLarge_url(String large_url) {
		this.large_url = large_url;
		getUpdatedProperties().put(Tribe.LARGE_URL, large_url);
	}

	public Date getLast_post_time() {
		return last_post_time;
	}

	public void setLast_post_time(Date last_post_time) {
		this.last_post_time = last_post_time;
		getUpdatedProperties().put(Tribe.LAST_POST_TIME,
				DateFormatter.format(last_post_time));
	}

	public String getMain_url() {
		return main_url;
	}

	public void setMain_url(String main_url) {
		this.main_url = main_url;
		getUpdatedProperties().put(Tribe.MAIN_URL, main_url);
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
		getUpdatedProperties().put(Tribe.NAME, name);
	}

	public int getPost_count() {
		return post_count;
	}

	public void setPost_count(int post_count) {
		this.post_count = post_count;
		getUpdatedProperties()
				.put(Tribe.POST_COUNT, String.valueOf(post_count));
	}

	public int getRequestadmincount() {
		return requestadmincount;
	}

	public void setRequestadmincount(int requestadmincount) {
		this.requestadmincount = requestadmincount;
		getUpdatedProperties().put(Tribe.REQUESTADMINCOUNT,
				String.valueOf(requestadmincount));
	}

	public int getRequestcount() {
		return requestcount;
	}

	public void setRequestcount(int requestcount) {
		this.requestcount = requestcount;
		getUpdatedProperties().put(Tribe.REQUESTCOUNT,
				String.valueOf(requestcount));
	}

	public int getSelected() {
		return selected;
	}

	public void setSelected(int selected) {
		this.selected = selected;
		getUpdatedProperties().put(Tribe.SELECTED, String.valueOf(selected));
	}

	public int getThread_count() {
		return thread_count;
	}

	public void setThread_count(int thread_count) {
		this.thread_count = thread_count;
		getUpdatedProperties().put(Tribe.THREAD_COUNT,
				String.valueOf(thread_count));
	}

	public String getTiny_url() {
		return tiny_url;
	}

	public void setTiny_url(String tiny_url) {
		this.tiny_url = tiny_url;
		getUpdatedProperties().put(Tribe.TINY_URL, tiny_url);
	}

	public int getTribe_type() {
		return tribe_type;
	}

	public void setTribe_type(int tribe_type) {
		this.tribe_type = tribe_type;
		getUpdatedProperties()
				.put(Tribe.TRIBE_TYPE, String.valueOf(tribe_type));
	}

	public Date getUpdisp() {
		return updisp;
	}

	public void setUpdisp(Date updisp) {
		this.updisp = updisp;
		getUpdatedProperties().put(Tribe.UPDISP, DateFormatter.format(updisp));
	}

	public int getUsercount() {
		return usercount;
	}

	public void setUsercount(int usercount) {
		this.usercount = usercount;
		getUpdatedProperties().put(Tribe.USERCOUNT, String.valueOf(usercount));
	}

	public String getVerify_code() {
		return verify_code;
	}

	public void setVerify_code(String verify_code) {
		this.verify_code = verify_code;
		getUpdatedProperties().put(Tribe.VERIFY_CODE, verify_code);
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
		// ID cannot be set.
		// updatedProperties.put(Tribe.ID, String.valueOf(id));
	}

}